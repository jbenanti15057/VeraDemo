pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building..'
                powershell 'mvn package'
            }
        }
      stage('SCA SC') {
         steps {
	 withCredentials([string(credentialsId: 'SRCCLR_API_TOKEN', variable: 'SRCCLR_API_TOKEN')]) {
		powershell """
                  Set-ExecutionPolicy AllSigned -Scope Process -Force
                  iex ((New-Object System.Net.WebClient).DownloadString('https://download.srcclr.com/ci.ps1')) 
                  srcclr scan --ws A77HY8b --allow-dirty .
		        """
             }
	    }
         }	
       stage('Veracode Sandbox Scan') {
           steps {
	   withCredentials([usernamePassword(credentialsId: 'd1a99adb-a914-4c42-961c-f144f1aeb339', passwordVariable: 'VERACODE_API_KEY', usernameVariable: 'VERACODE_API_ID')]) {
              veracode applicationName: 'Verademo-dotnet', criticality: 'High', deleteIncompleteScanLevel: '0', fileNamePattern: '', replacementPattern: '', sandboxName: 'Release Candidate v1.1.1', scanExcludesPattern: '', scanIncludesPattern: '', scanName: 'FromJenkins', teams: 'Demo Team', timeout: 60, uploadIncludesPattern: '**/**.war', vid: "${VERACODE_API_ID}", vkey: "${VERACODE_API_KEY}", waitForScan: true
       	        }
	}
}
  
        stage('Deploy') {
            steps {
                echo 'Deploying....'
            }
        }
    }
	post {
	    always {
	      archiveArtifacts artifacts: 'results.json', fingerprint: true
	    }
	}
}
